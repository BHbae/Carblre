plugins {
	id 'java'
	id 'war'
	id 'org.springframework.boot' version '3.2.8'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
    // 의존성 추가
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation group: 'org.glassfish.web', name: 'jakarta.servlet.jsp.jstl', version: '3.0.0'
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    implementation 'org.springframework.security:spring-security-crypto'

    implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:2.0.0' // JSTL 의존성 추가
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:2.0.0' // JSTL 구현 추가
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
    implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.0' // JSTL 안되서 추가함
    providedCompile 'javax.servlet:javax.servlet-api:4.0.1' // 서블릿 API.
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'net.nurigo:sdk:4.3.0'
    // Password Security Dependency
    implementation 'org.springframework.security:spring-security-crypto'

    // E-mail Dependency
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0' // 최신 버전을 확인하고 필요에 따라 업데이트
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0' // 최신 버전을 확인하고 필요에 따라 업데이트
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0' // 최신 버전을 확인하고 필요에 따라 업데이트

    // ini4j
    implementation 'org.ini4j:ini4j:0.5.4' // 최신 버전을 확인하고 필요에 따라 업데이트

    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'com.coolsms:coolsms-java-sdk:1.0.0'

    // qrcode zxing
    implementation 'com.google.zxing:core:3.5.1'  // 최신 버전 확인 후 사용
    implementation 'com.google.zxing:javase:3.5.1'

    //WebSocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // JSON
    implementation 'org.json:json:20210307' // XML to JSON 의존성 추가
    implementation 'com.googlecode.json-simple:json-simple:1.1.1' // json 의존성 추가
}

tasks.named('test') {
	useJUnitPlatform()
}